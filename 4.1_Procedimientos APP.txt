--App Escritorio--
--
create or replace procedure SPA_CAMBIO_CONTRASENA_PT2 (V_CORREO varchar,V_PASS varchar,V_PASS_2 varchar)  
is  
ERROR varchar(300);
begin  

UPDATE USUARIO
SET CONTRASEÑA_USUARIO = V_PASS_2
where CORREO_USUARIO=V_CORREO and CONTRASEÑA_USUARIO=V_PASS and TIPO_USUARIO_ID_TIPO_USUARIO=0;
EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
end SPA_CAMBIO_CONTRASENA_PT2;
--
create or replace PROCEDURE SPA_CREAR_CTTRANS 
(
V_NOMBRECLIENTE VARCHAR2,
V_RESPONSABLE_NOMBRE VARCHAR2,
V_RESPONSABLE_EMPRESA VARCHAR2,
V_DESTINOPEDIDO VARCHAR2,
V_PESOTOTAL NUMBER,
V_VALORSERVICIO NUMBER,
V_ID_TRANSPORTISTA NUMBER,
V_CODIGOORDENCOMPRA VARCHAR2)
IS
ERROR varchar(300);
BEGIN
  INSERT INTO CT_TRANSP
VALUES (
SEC_CTTRANSPORTISTA.nextval,
V_NOMBRECLIENTE ,
V_RESPONSABLE_NOMBRE ,
V_RESPONSABLE_EMPRESA ,
to_char(SYSDATE,'dd/MM/YYYY') ,
('No Terminado'),
V_DESTINOPEDIDO ,
'Pagado',
V_PESOTOTAL ,
V_VALORSERVICIO ,
V_ID_TRANSPORTISTA ,
V_CODIGOORDENCOMPRA );
EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_ELIMINARPROPUETAS_NU(V_IDPROPUESTA VARCHAR,V_CODIGOORDENCOMPRA VARCHAR)
IS 
ERROR varchar(300);
BEGIN
    DELETE FROM PROPUESTA WHERE ID_PROPUESTA<>V_IDPROPUESTA and COD_ORDEN_CODIGOORDENCOMPRA=V_CODIGOORDENCOMPRA;
    EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_CLIENTE (V_ID_CLIENTE VARCHAR2,C_CLIENTE OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
 OPEN C_CLIENTE FOR 
 SELECT 
    NOMBRE_CLIENTE,
    APELLIDO_CLIENTE,
    TIPO_CLIENTE,
    USUARIO_CORREO_USUARIO 
 FROM CLIENTE CLI JOIN TIPO_CLIENTE TC ON CLI.TIPO_CLIENTE_ID_TIPO_CLIENTE = TC.ID_TIPO_CLIENTE  WHERE ID_CLIENTE = V_ID_CLIENTE;
 EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_CONTRATOS (C_CT_PRODUCTOR_1 OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_CT_PRODUCTOR_1 
  FOR 
  SELECT 
    ID_PCONTRATO,
    NOMBRECLIENTE,
    RESPONSABLE_NOMBRE,
    RESPONSABLE_EMPRESA,
    FECHA_INICIO,
    FECHA_TERMINO,
    DESTINOPEDIDO,
    ESTADO_CONTRATO,
    GANANCIATOTAL,
    GANANCIA_MAIPO,
    GANANCIAPRODUCTOR,
    PRODUCTOR_ID_PRODUCTOR,
    COD_ORDEN_CODIGOORDENCOMPRA
  FROM CT_PRODUCTOR ;
  EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_CONTRATOS_CODIGO (V_CODIGOORDENCOMPRA VARCHAR2,C_CT_PRODUCTOR_1 OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_CT_PRODUCTOR_1 FOR SELECT
    ID_PCONTRATO,
    ctp.COD_ORDEN_CODIGOORDENCOMPRA,
    ctp.NOMBRECLIENTE,
    ctp.RESPONSABLE_NOMBRE,
    ctp.RESPONSABLE_EMPRESA,
    ctp.FECHA_INICIO,
    ctp.FECHA_TERMINO,
    ctp.DESTINOPEDIDO,
    ctp.ESTADO_CONTRATO,
    ctp.GANANCIATOTAL,
    ctp.GANANCIA_MAIPO,
    ctp.GANANCIAPRODUCTOR,
    ctp.PRODUCTOR_ID_PRODUCTOR,
    pr.USUARIO_CORREO_USUARIO
     FROM CT_PRODUCTOR ctp join PRODUCTOR pr  on pr.ID_PRODUCTOR = ctp.PRODUCTOR_ID_PRODUCTOR  WHERE COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
     EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_CORREOS_PROD (V_CODIGOORDENCOMPRA VARCHAR2,C_CORREOS_PRODUCTOR OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_CORREOS_PRODUCTOR FOR SELECT distinct
    pr.USUARIO_CORREO_USUARIO
     FROM CT_PRODUCTOR ctp join PRODUCTOR pr  on pr.ID_PRODUCTOR = ctp.PRODUCTOR_ID_PRODUCTOR  WHERE COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
     EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_COUNT_CTO (C_CTO OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
OPEN C_CTO FOR SELECT 
    COUNT(CASE WHEN ESTADO_CONTRATO = 'Aprobado' then 1 ELSE NULL END) as "APROBADOS",
    COUNT(CASE WHEN ESTADO_CONTRATO = 'Rechazado' then 1 ELSE NULL END) as "RECHAZADOS",
    COUNT(CASE WHEN ESTADO_CONTRATO = 'Pendiente' then 1 ELSE NULL END) as "PENDIENTES"
from CT_PRODUCTOR;
EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_COUNT_USU (C_USU OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
OPEN C_USU FOR SELECT 
    COUNT(CASE WHEN TIPO_USUARIO_ID_TIPO_USUARIO = 1 then 1 ELSE NULL END) as "CLIENTES",
    COUNT(CASE WHEN TIPO_USUARIO_ID_TIPO_USUARIO = 2 then 1 ELSE NULL END) as "PRODUCTORES",
    COUNT(CASE WHEN TIPO_USUARIO_ID_TIPO_USUARIO = 3 then 1 ELSE NULL END) as "TRANSPORTISTAS"
from USUARIO;
EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_DETALLE_CTO (V_CODIGOORDENCOMPRA VARCHAR2,C_CT_PRODUCTOR_2 OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
 OPEN C_CT_PRODUCTOR_2 FOR 
 SELECT 
     SUM(GANANCIATOTAL) AS GANACIA_TOTAL_CONTRATO,
     SUM(GANANCIA_MAIPO) AS GANACIA_TOTAL_MAIPOGRANDE,
     SUM(GANANCIAPRODUCTOR) AS GANACIA_TOTAL_PRODUCTOR 
 FROM CT_PRODUCTOR WHERE COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
 EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_ORDEN (C_ORDEN OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_ORDEN 
  FOR SELECT
        OC.COD_ORDEN_CODIGOORDENCOMPRA,
        CLI.ID_CLIENTE,
        CLI.NOMBRE_CLIENTE,
        CLI.APELLIDO_CLIENTE,
        CLI.USUARIO_CORREO_USUARIO,
        SUM(OC.PRECIO_TOTAL) AS PRECIO_TOTAL,
        SUM(OC.PESO_TOTAL) AS PESO_TOTAL,
        OC.ESTADO,
        OC.DESTINO_COMPRA
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE
      WHERE OC.ESTADO = 'Pendiente'
      GROUP BY OC.ESTADO,CLI.NOMBRE_CLIENTE,CLI.APELLIDO_CLIENTE,CLI.USUARIO_CORREO_USUARIO,CLI.ID_CLIENTE,OC.COD_ORDEN_CODIGOORDENCOMPRA,OC.DESTINO_COMPRA;
      EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_ORDEN_CODIGO (V_CODIGOORDENCOMPRA VARCHAR2,C_ORDEN OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_ORDEN 
  FOR SELECT
        OC.COD_ORDEN_CODIGOORDENCOMPRA,
        CLI.ID_CLIENTE,
        CLI.NOMBRE_CLIENTE,
        CLI.APELLIDO_CLIENTE,
        CLI.USUARIO_CORREO_USUARIO,
        SUM(OC.PRECIO_TOTAL) AS PRECIO_TOTAL,
        SUM(OC.PESO_TOTAL) AS PESO_TOTAL,
        OC.ESTADO,
        OC.DESTINO_COMPRA
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE
      WHERE OC.COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA AND OC.ESTADO = 'Pendiente'
      GROUP BY OC.ESTADO,CLI.NOMBRE_CLIENTE,CLI.APELLIDO_CLIENTE,CLI.USUARIO_CORREO_USUARIO,CLI.ID_CLIENTE,OC.COD_ORDEN_CODIGOORDENCOMPRA,OC.DESTINO_COMPRA
      ;
      EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_ORDEN_CODIGO_SEG (V_CODIGOORDENCOMPRA VARCHAR2,C_ORDEN OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_ORDEN 
  FOR SELECT
        OC.COD_ORDEN_CODIGOORDENCOMPRA,
        CLI.ID_CLIENTE,
        CLI.NOMBRE_CLIENTE,
        CLI.APELLIDO_CLIENTE,
        CLI.USUARIO_CORREO_USUARIO,
        SUM(OC.PRECIO_TOTAL) AS PRECIO_TOTAL,
        SUM(OC.PESO_TOTAL) AS PESO_TOTAL,
        OC.ESTADO,
        OC.DESTINO_COMPRA
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE
      WHERE OC.COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA
      GROUP BY OC.ESTADO,CLI.NOMBRE_CLIENTE,CLI.APELLIDO_CLIENTE,CLI.USUARIO_CORREO_USUARIO,CLI.ID_CLIENTE,OC.COD_ORDEN_CODIGOORDENCOMPRA,OC.DESTINO_COMPRA
      ;
      EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_ORDEN_MAX_PRECIO (C_ORDEN_MAX_PRECIO OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_ORDEN_MAX_PRECIO 
  FOR SELECT
        OC.COD_ORDEN_CODIGOORDENCOMPRA,
        CLI.NOMBRE_CLIENTE,
        OC.ESTADO,
     (SELECT MAX(SUM(OC.PRECIO_TOTAL)) AS PRECIO_TOTAL 
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE GROUP BY OC.COD_ORDEN_CODIGOORDENCOMPRA) AS ORDEN_MAX_PRECIO
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE
      GROUP BY OC.COD_ORDEN_CODIGOORDENCOMPRA, CLI.NOMBRE_CLIENTE, OC.ESTADO; 
      EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_ORDEN_MIN_PRECIO (C_ORDEN_MIN_PRECIO OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_ORDEN_MIN_PRECIO 
  FOR SELECT
        OC.COD_ORDEN_CODIGOORDENCOMPRA,
        CLI.NOMBRE_CLIENTE,
        OC.ESTADO,
        (SELECT MIN(SUM(OC.PRECIO_TOTAL)) AS PRECIO_TOTAL 
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE GROUP BY OC.COD_ORDEN_CODIGOORDENCOMPRA) AS ORDEN_MIN_PRECIO
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE
      GROUP BY OC.COD_ORDEN_CODIGOORDENCOMPRA, CLI.NOMBRE_CLIENTE, OC.ESTADO; 
      EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_ORDEN_SEG (C_ORDEN OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_ORDEN 
  FOR SELECT
        OC.COD_ORDEN_CODIGOORDENCOMPRA,
        CLI.ID_CLIENTE,
        CLI.NOMBRE_CLIENTE,
        CLI.APELLIDO_CLIENTE,
        CLI.USUARIO_CORREO_USUARIO,
        SUM(OC.PRECIO_TOTAL) AS PRECIO_TOTAL,
        SUM(OC.PESO_TOTAL) AS PESO_TOTAL,
        OC.ESTADO,
        OC.DESTINO_COMPRA
      FROM ORDEN_COMPRA OC JOIN CLIENTE CLI ON OC.CLIENTE_ID_CLIENTE = CLI.ID_CLIENTE
      GROUP BY OC.ESTADO,CLI.NOMBRE_CLIENTE,CLI.APELLIDO_CLIENTE,CLI.USUARIO_CORREO_USUARIO,CLI.ID_CLIENTE,OC.COD_ORDEN_CODIGOORDENCOMPRA,OC.DESTINO_COMPRA;
      EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_PROPUESTAS(V_CODIGO VARCHAR, PROPUESTAS out SYS_REFCURSOR)
IS 
ERROR varchar(300);
BEGIN

    OPEN PROPUESTAS FOR SELECT pr.id_propuesta, pr.descripcion_propuesta, pr.valor_servicio, tr.usuario_correo_usuario
      FROM PROPUESTA pr inner join transportista tr on pr.TRANSPORTISTA_ID_TRANSPORTISTA = tr.id_transportista 
      where COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGO and pr.estado = 'Aprobado';
EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_LISTAR_test (C_test OUT SYS_REFCURSOR)
IS
ERROR varchar(300);
BEGIN
  OPEN C_test 
  FOR select pro.usuario_correo_usuario from orden_compra oc join PRODUCTO_ORDEN po on oc.idorden = po.orden_compra_idorden 
                                                       join producto pr on po.producto_id_producto = pr.id_producto 
                                                       join productor pro on pr.productor_id_productor = pro.id_productor;
                                                       EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace procedure SPA_LOGIN_APP (V_CORREO varchar,V_PASS varchar, V_COUNT out number)  
is  
ERROR varchar(300);
begin  
 select count(*) into V_COUNT  
 from USUARIO  
 where CORREO_USUARIO=V_CORREO and CONTRASEÑA_USUARIO=V_PASS and TIPO_USUARIO_ID_TIPO_USUARIO=0;  
 EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
end SPA_LOGIN_APP;
--
create or replace PROCEDURE SPA_MODIFICAR_CP_APR (V_CODIGOORDENCOMPRA VARCHAR2)
IS
ERROR varchar(300);
BEGIN
  UPDATE CT_PRODUCTOR 
  SET    ESTADO_CONTRATO = 'Aprobado',FECHA_TERMINO=to_char(SYSDATE,'dd/MM/YYYY')
  WHERE  COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
  EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_MODIFICAR_CP_REC (V_CODIGOORDENCOMPRA VARCHAR2)
IS
ERROR varchar(300);
BEGIN
  UPDATE CT_PRODUCTOR 
  SET    ESTADO_CONTRATO = 'Rechazado',FECHA_TERMINO=to_char(SYSDATE,'dd/MM/YYYY')
  WHERE  COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
  EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_MODIFICAR_CT_APR (V_CODIGOORDENCOMPRA VARCHAR2)
IS
ERROR varchar(300);
BEGIN
  UPDATE CT_TRANSP 
  SET    ESTADOCONTRATO = 'Aprobado',FECHA_TERMINO=to_char(SYSDATE,'dd/MM/YYYY')
  WHERE  COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
  EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_MODIFICAR_CT_REC (V_CODIGOORDENCOMPRA VARCHAR2)
IS
ERROR varchar(300);
BEGIN
  UPDATE CT_TRANSP 
  SET    ESTADOCONTRATO = 'Rechazado',FECHA_TERMINO=to_char(SYSDATE,'dd/MM/YYYY')
  WHERE  COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
  EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_MODIFICAR_OC_APR (V_CODIGOORDENCOMPRA VARCHAR2)
IS
ERROR varchar(300);
BEGIN
  UPDATE ORDEN_COMPRA 
  SET    ESTADO = 'Aprobado'
  WHERE  COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
  EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
create or replace PROCEDURE SPA_MODIFICAR_OC_REC (V_CODIGOORDENCOMPRA VARCHAR2)
IS
ERROR varchar(300);
BEGIN 
    UPDATE ORDEN_COMPRA 
  SET    ESTADO = 'Rechazado'
  WHERE  COD_ORDEN_CODIGOORDENCOMPRA = V_CODIGOORDENCOMPRA;
   EXCEPTION
  WHEN OTHERS THEN
    ERROR:= SQLERRM;

    INSERT INTO REGISTRO_ERROR VALUES(
    SEC_ERROR.NEXTVAL,
    ERROR
    );
END;
--
--App Escritorio--